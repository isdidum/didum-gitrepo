<?xml version="1.0" encoding="utf-8"?>
<!--
//Developed by Abraham, Didum:abraham.didum@iowa.gov
//Data : May 20, 2011
-->

<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:s="library://ns.adobe.com/flex/spark" 
	xmlns:mx="library://ns.adobe.com/flex/mx"
	xmlns:esri="http://www.esri.com/2008/ags"
	pageTitle="Map Point Identify: Facilities Search">
	
	<fx:Script>
		<![CDATA[
			import com.esri.ags.Graphic;
			import com.esri.ags.SpatialReference;
			import com.esri.ags.events.DrawEvent;
			import com.esri.ags.events.IdentifyEvent;
			import com.esri.ags.events.MapMouseEvent;
			import com.esri.ags.geometry.Extent;
			import com.esri.ags.geometry.Geometry;
			import com.esri.ags.geometry.MapPoint;
			import com.esri.ags.geometry.Polygon;
			import com.esri.ags.geometry.Polyline;
			import com.esri.ags.layers.Layer;
			import com.esri.ags.tasks.supportClasses.IdentifyParameters;
			import com.esri.ags.tasks.supportClasses.IdentifyResult;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.ItemClickEvent;
			import mx.events.ListEvent;
			import mx.rpc.AsyncResponder;
			
			
			public var gra:Graphic;
			private var lastClick:MapPoint;
			[Bindable]private var lastIdentResultGraphic:Graphic;
			
			
			private function mapIdentify(event:MapMouseEvent):void {
				myGraphicsLayer.clear();
				
				var identifyParams:IdentifyParameters = new IdentifyParameters();
				identifyParams.tolerance = 3;
				identifyParams.returnGeometry = true;
				identifyParams.geometry = event.mapPoint; //mySelectTool; 
				identifyParams.mapExtent = myMap.extent;
				identifyParams.width = myMap.width;
				identifyParams.height = myMap.height;
				identifyParams.layerIds = [0];
				identifyParams.spatialReference = myMap.spatialReference;
				
				
				lastClick = event.mapPoint;
				var clickGraphic:Graphic = new Graphic(lastClick, clickPtSym);
				myGraphicsLayer.add(clickGraphic);
				
				identifyTask.execute(identifyParams, new AsyncResponder(onMyResult, onMyFault, clickGraphic));
				//identifyTask.execute(identifyParams, new AsyncResponder(onMyResult, onMyFault, null));
			}
			
			private function onMyResult(results:Array, clickGraphic:Graphic=null):void {
				if(results && results.length > 0) 
				{
					var result:IdentifyResult = results[0];
					var resultGraphic:Graphic = result.feature;
					
					var mapPoint:MapPoint = MapPoint(clickGraphic.geometry); //mySelectTool;
					var myPoint:Point = myMap.toScreen(mapPoint);
					
					
					switch(resultGraphic.geometry.type)
					{
						case Geometry.POLYGON: 
						{						
							/* This allows the population of datagrid */					
							
							var myFeatures:ArrayCollection = new ArrayCollection();
							for(var k:int = 0; k < results.length; k++)
							{	
								var cntr2:Number = (k+1);
								bPanel.title = "Features : " + results.length;
								myFeatures.addItem(
								{
									COUNT: cntr2,
									ADDRESS1: results[k].feature.attributes.ADDRESS1,
									BUILDING_TYPE: results[k].feature.attributes.BUILDING_TYPE,
									COST_CENTER: results[k].feature.attributes.COST_CENTER,
									YEAR_BUILT: results[k].feature.attributes.YEAR_BUILT,
									PHONE_NUMBER: results[k].feature.attributes.PHONE_NUMBER,
									SQUARE_FOOTAGE: results[k].feature.attributes.SQUARE_FOOTAGE,
									UKEY: results[k].feature.attributes.UKEY,
									INVENTORY_NUMBER: results[k].feature.attributes.INVENTORY_NUMBER
								}
							);
														
							
							/*var myResults:Array = [];
							for (var i:int = 0; i<results.length; i++) {
								myResults[i] = results[i].feature.attributes;
							}*/
							myGrid.visible = true;
							myGrid.dataProvider = myFeatures; //myResults;  
							bPanel.title = "Features : " + results.length;
							}	//ends for-loop statement
							break;
						}
					}
					lastIdentResultGraphic = resultGraphic;
					// update clickGraphic to return feature
					clickGraphic.attributes = resultGraphic.attributes; 
				}
			}
			
			private function onMyFault(error:Object, clickGraphic:Graphic=null):void {
				Alert.show(String(error), "Identify Error");
			}
			
			private function clearMap():void {
				myGraphicsLayer.clear();
			}
			
			protected function onItemClick(event:ListEvent):void
			{
				findGraphicByAttributes(event.itemRenderer.data).symbol = sms_fExp;
			}
			
			public function findGraphicByAttributes(myAttr:Object):Graphic {
				for each(var mGra:Graphic in myGraphicsLayer.graphicProvider) {
					var getPoint:MapPoint = mGra.geometry as MapPoint;
					if(mGra.attributes === myAttr) {
						if(getPoint is MapPoint) {
							if(myMap.scale > 144448)
								myMap.scale = 144448;
							myMap.centerAt(getPoint);
							return mGra;
						}
						/*	
						in mGra, extent exists as "null" object reference
						myMap.extent = mGra.geometry.extent.expand(2.8); //final expansion
						*/
						return mGra;
					}
				}
				return null;
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- Symbol for where the user clicks -->
		<esri:SimpleMarkerSymbol id="clickPtSym" color="0x00FF00" size="12" style="circle"/>
		
		<!-- Identify Task concurrency="last" -->
		<esri:IdentifyTask id="identifyTask" concurrency="last" disableClientCaching="true" 
			url="http://geonexus/ArcGIS/rest/services/Facilities/BUILDING_SO_V/MapServer"/>
		
		<!-- Symbol for all line shapes--> 
		<esri:SimpleLineSymbol id="sls" width="3" color="0x00FF00"/>
		
		<!-- Symbol for all polygon shapes --> 
		<esri:SimpleFillSymbol id="sfs" color="0x5B5BFF" style="solid">
			<esri:outline>
				<esri:SimpleLineSymbol width="1" color="0x00FF00"/>
			</esri:outline>
		</esri:SimpleFillSymbol>
		
		<!--Fill Polygon with purple & draws solid blue line around Polygon on final expansion-->
		<esri:SimpleFillSymbol id="sms_fExp" style="solid" alpha="0.80" color="0x6600FF">
			<esri:SimpleLineSymbol width="4" color="0xFF0000" style="solid"/>
		</esri:SimpleFillSymbol>
		
		<!--myDrawTool-->
		<esri:DrawTool id="myDrawTool" fillSymbol="{sfs}" map="{myMap}"
			graphicsLayer="{myGraphicsLayer}" lineSymbol="{sls}" markerSymbol="{clickPtSym}"/>
	</fx:Declarations>
	
	<mx:VDividedBox width="100%" height="100%">
		<esri:Map id="myMap" level="7" mapClick="mapIdentify(event)" logoVisible="false"
			extent="{new Extent(-10884964.57, 4660003.62, -9907264.87, 5649404.52, new SpatialReference(102113))}" 
			openHandCursorVisible="false" left="0" right="0" top="0" bottom="0" verticalCenter="-16" horizontalCenter="0">
			
			<esri:ArcGISTiledMapServiceLayer url="http://geonexus/ArcGIS/rest/services/Basemap/Basemap/MapServer" alpha="0.45"/> 	
			<esri:ArcGISDynamicMapServiceLayer  
				url="http://geonexus/ArcGIS/rest/services/Facilities/BUILDING_SO_V/MapServer" alpha="1.0"/>
			<esri:ArcGISDynamicMapServiceLayer  
				url="http://geonexus/ArcGIS/rest/services/Facilities/PARCEL_SO_V/MapServer" alpha="1.0"/>
			
			<!---This adds graphicslayer to map-->
			<esri:GraphicsLayer graphicProvider="{lastIdentResultGraphic}"/> 
			<esri:GraphicsLayer id="myGraphicsLayer"/>
		</esri:Map>
		
		<!--<s:TitleWindow id="myFloatWin" width="600" height="600" right="75" top="75">-->
		<mx:Panel id="bPanel" width="100%" height="45%" color="0x999999" 
			title="Features : 0">
			<mx:DataGrid id="myGrid" width="100%" height="100%" visible="false" color="0x006699"
				editable="false" itemClick="onItemClick(event)">			
				<mx:columns>
					<mx:DataGridColumn width="15" headerText="Count" dataField="COUNT"/>
					<mx:DataGridColumn width="130" headerText="ADDRESS" dataField="ADDRESS1"/>
					<mx:DataGridColumn width="100" headerText="BLDG TYPE" dataField="BUILDING_TYPE"/>
					<mx:DataGridColumn width="73" headerText="COST-CTR" dataField="COST_CENTER"/>
					<mx:DataGridColumn width="43" headerText="YEAR" dataField="YEAR_BUILT"/>
					<mx:DataGridColumn width="65" headerText="PHONE" dataField="PHONE_NUMBER"/>
					<mx:DataGridColumn width="60" headerText="FTAGE^2" dataField="SQUARE_FOOTAGE"/>
					<mx:DataGridColumn width="43" headerText="UKEY" dataField="UKEY"/>
					<mx:DataGridColumn width="75" headerText="INVENTORY" dataField="INVENTORY_NUMBER"/>
				</mx:columns>
			</mx:DataGrid>
			
			<!--for RadioButton http://blog.flexexamples.com/2008/01/27/using-a-checkbox-control-as-a-list-item-renderer-in-flex/-->
		</mx:Panel>
	</mx:VDividedBox>
	
</s:Application>
