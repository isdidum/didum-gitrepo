<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
               xmlns:s="library://ns.adobe.com/flex/spark"
               xmlns:mx="library://ns.adobe.com/flex/mx"
               xmlns:esri="http://www.esri.com/2008/ags"
               pageTitle="Measure Distances">
    <!--
         This sample shows how to measure line distance correctly.

         ArcGIS Server 10 adds support for geodesic measurement.

         With earlier versions of ArcGIS Server, the "geodesic" property cannot be used.
         The "9.3" solution depends on which coordinate system is being using.
         If the map uses a geographic coordinate system, the line needs to be projected
         into the desired projected coordinate system for calculating the line length.
         The geometry service can be used to do the projection.

         With ArcGIS Server 10, the geodesic property can be used for easier measurements.
    -->

    <fx:Script>
        <![CDATA[
            import com.esri.ags.Graphic;
            import com.esri.ags.events.GeometryServiceEvent;
            import com.esri.ags.events.LocatorEvent;
            import com.esri.ags.events.MapMouseEvent;
            import com.esri.ags.geometry.MapPoint;
            import com.esri.ags.geometry.Polyline;
            import com.esri.ags.symbols.CompositeSymbol;
            import com.esri.ags.symbols.TextSymbol;
            import com.esri.ags.tasks.supportClasses.AddressCandidate;
            import com.esri.ags.tasks.supportClasses.DistanceParameters;
            import com.esri.ags.utils.WebMercatorUtil;

            public var inputPoints:Array = [];
            public var endGraphic:Graphic;
            public var totalDistance:Number = 0
            public var segmentDistance:Array = [];

            protected function zipCodeHandler():void
            {
                refresh();
                var myAddress:Object = { Zip: zipCode.text };
                locator.addressToLocations(myAddress);
            }

            protected function clearRouteButton_clickHandler(event:MouseEvent):void
            {
                refresh();
            }

            private function refresh():void
            {
                myGraphicsLayer.clear();
                inputPoints = [];
                totalDistance = 0;
                segmentDistance = [];

                textArea.htmlText = "";
            }

            protected function locator_addressToLocationsCompleteHandler(event:LocatorEvent):void
            {
                if (event.addressCandidates.length > 0)
                {
                    myMap.centerAt(WebMercatorUtil.geographicToWebMercator(AddressCandidate(event.addressCandidates[0]).location) as MapPoint);
                    myMap.level = 12;
                }
            }

            protected function myMap_mapClickHandler(event:MapMouseEvent):void
            {
                const pt:MapPoint = event.mapPoint;
                inputPoints.push(pt);

                //define the symbology for the graphics
                if (inputPoints.length == 1)
                {
                    myGraphicsLayer.add(new Graphic(pt, new CompositeSymbol([ sms, startText ])));
                }

                if (inputPoints.length > 1)
                {
                    if (endGraphic)
                    {
                        endGraphic.symbol = sms;
                    }

                    //two input points, hence call the geometry service and perform the distance operation
                    var distParams:DistanceParameters = new DistanceParameters();
                    distParams.distanceUnit = GeometryService.UNIT_STATUTE_MILE;
                    distParams.geometry1 = inputPoints[inputPoints.length - 2];
                    distParams.geometry2 = inputPoints[inputPoints.length - 1];
                    distParams.geodesic = true;

                    //draw a polyline to connect the input points
                    const polyline:Polyline = new Polyline(null, new SpatialReference(4326));
                    polyline.addPath([ distParams.geometry1, distParams.geometry2 ]);
                    myGraphicsLayer.add(new Graphic(polyline, sls));

                    //Calculate the geodesic distance
                    geometryService.distance(distParams);

                    endGraphic = new Graphic(pt, new CompositeSymbol([ sms, finishText ]));
                    myGraphicsLayer.add(endGraphic);
                }
            }

            protected function geometryService_distanceCompleteHandler(event:GeometryServiceEvent):void
            {
                segmentDistance.push(numberFormatter.format(event.result));
                totalDistance += event.result;
                textArea.htmlText = "<b>Total:</b> " + numberFormatter.format(totalDistance) + " miles <br />";

                for (var i:Number = 0; i < segmentDistance.length; i++)
                {
                    textArea.htmlText += "<b>Segment " + (i + 1) + "</b>" + ": " + segmentDistance[i] + " miles <br />";
                }
            }
        ]]>
    </fx:Script>

    <fx:Declarations>
        <!-- Number Formatter -->
        <mx:NumberFormatter id="numberFormatter" precision="2"/>

        <!-- Symbols -->
        <esri:SimpleMarkerSymbol id="sms"
                                 alpha="0.65"
                                 color="0x7CCD7C"
                                 size="12"
                                 style="square">
            <esri:SimpleLineSymbol width="2"
                                   color="0xFF0000"
                                   style="solid"/>
        </esri:SimpleMarkerSymbol>
        <esri:SimpleLineSymbol id="sls"
                               width="4"
                               color="0x7CCD7C"
                               style="solid"/>
        <esri:TextSymbol id="startText"
                         color="0x0000FF"
                         text="Start"
                         yoffset="14"/>
        <esri:TextSymbol id="finishText"
                         color="0x0000FF"
                         text="Finish"
                         yoffset="14"/>

        <!-- Locator -->
        <esri:Locator id="locator"
                      addressToLocationsComplete="locator_addressToLocationsCompleteHandler(event)"
                      url="http://sampleserver1.arcgisonline.com/ArcGIS/rest/services/Locators/ESRI_Geocode_USA/GeocodeServer"/>

        <!-- Geometry Service-->
        <esri:GeometryService id="geometryService"
                              distanceComplete="geometryService_distanceCompleteHandler(event)"
                              url="http://sampleserver1.arcgisonline.com/ArcGIS/rest/services/Geometry/GeometryServer"/>
    </fx:Declarations>

    <s:HGroup width="100%" height="100%"
              left="5" top="5">
        <s:VGroup height="100%">
            <s:Label text="Enter ZIP Code"/>
            <s:HGroup>
                <s:TextInput id="zipCode"
                             enter="zipCodeHandler()"
                             text="92373"/>
                <s:Button id="goButton"
                          click="zipCodeHandler()"
                          label="Go"/>
            </s:HGroup>
            <mx:Spacer width="100%"/>
            <s:Button id="clearRouteButton"
                      click="clearRouteButton_clickHandler(event)"
                      label="Clear Route"/>
            <mx:Spacer width="100%"/>
            <mx:HRule width="100%"/>
            <mx:TextArea id="textArea"
                         width="100%" height="100%"
                         horizontalScrollPolicy="auto"
                         verticalScrollPolicy="auto"/>
        </s:VGroup>

        <s:Panel width="100%" height="100%"
                 dropShadowVisible="false"
                 title="Zoom to the ZIP Code - then click two or more input points on the map to calculate the geodesic (shortest path) distance.">
            <esri:Map id="myMap"
                      width="100%" height="100%"
                      mapClick="myMap_mapClickHandler(event)">
                <esri:extent>
                    <esri:Extent xmin="-13917000" ymin="1625000" xmax="-8907000" ymax="8278291">
                        <esri:SpatialReference wkid="102100"/>
                    </esri:Extent>
                </esri:extent>
                <esri:ArcGISTiledMapServiceLayer url="http://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer" visible="{bb.selectedIndex == 1}"/>
                <esri:ArcGISTiledMapServiceLayer url="http://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer" visible="{bb.selectedIndex == 0}"/>
                <esri:GraphicsLayer id="myGraphicsLayer"/>
            </esri:Map>
            <mx:ToggleButtonBar id="bb"
                                right="5" top="5"
                                horizontalGap="2"
                                selectedIndex="0">
                <mx:dataProvider>
                    <fx:Array>
                        <fx:String>Streets</fx:String>
                        <fx:String>Imagery</fx:String>
                    </fx:Array>
                </mx:dataProvider>
            </mx:ToggleButtonBar>
        </s:Panel>
    </s:HGroup>
</s:Application>
